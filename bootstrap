#! /usr/bin/env bash
set -e

# Doesn't return success
# TODO: Why?
# source ./.osx || true

function git_sync() {
  local repo="$1"
  local dir="$2"
  if [[ -d $dir ]]; then
    (cd $dir && git pull)
  else
    mkdir -p $dir
    git clone $repo $dir
  fi
}

function install_brew() {
  which brew &> /dev/null || ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  source ./brewfile
  local brew_bash="$(brew --prefix)/bin/bash"
  if ! grep -q $brew_bash /etc/shells; then
    sudo bash -c "echo $brew_bash >> /etc/shells"
  fi
  if ! which bash | grep -q $brew_bash; then
    sudo chsh -s "$brew_bash" $USER
  fi
}

function install_rbenv() {
  local rbenv_root=$HOME/.rbenv
  git_sync "https://github.com/sstephenson/rbenv.git" $rbenv_root
  local rbenv_plugins=$rbenv_root/plugins
  git_sync "https://github.com/sstephenson/ruby-build.git" $rbenv_plugins/ruby-build
  git_sync "https://github.com/sstephenson/rbenv-gem-rehash.git" $rbenv_plugins/rbenv-gem-rehash
}

function install_ruby() {
  bash -c "
    source $HOME/.bash_profile
    rbenv install $1 --keep --verbose --skip-existing
    rbenv global $1
    if ! gem list interactive_editor | grep -q interactive_editor; then
      gem install interactive_editor
    fi
    if ! gem list bundler | grep -q bundler; then
      gem install bundler
    fi
    gem update --system
    gem update
    gem cleanup
  "
}

function setup_nvm() {
  mkdir -p $HOME/.nvm
  cp $(brew --prefix nvm)/nvm-exec ~/.nvm/
}

mkdir -p $HOME/bin
find $PWD -name '.[^.DS_Store]*' -type f -depth 1 | xargs -I % ln -sfv % $HOME
ln -sfv $PWD/.cabal/* $HOME/.cabal
mkdir -p $HOME/.ssh
ln -sfv $PWD/.ssh/config $HOME/.ssh/config

if [[ -z "$NOBREW" ]]; then
  install_brew
fi

if [[ -z "$NORBENV" ]]; then
  install_rbenv
  install_ruby "2.3.1"
fi

echo 'Bootstrap complete'
